name: Django CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Activate Virtual Environment
        run: |
          python -m venv venv
          source venv/bin/activate
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with Flake8
        run: |
          # Stop build if we have syntax errors or undefined names
          flake8 src/media_analyzer --count --select=E9,F63,F7,F82 --show-source --statistics
          # All errors treated as warnings. 
          flake8 src/media_analyzer --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run Tests with Coverage
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          BEAR_TOKEN: ${{ secrets.BEAR_TOKEN }}
          PYTHONPATH: /home/runner/work/media-analyzer/media-analyzer:/home/runner/work/media-analyzer/media-analyzer/src:/home/runner/work/media-analyzer/media-analyzer/src/media_analyzer:/home/runner/work/media-analyzer/media-analyzer/train
        id: CoverageReport
        run: |
          cd src/media_analyzer
          python3 -m coverage run --source="." manage.py test
          coverage=$(python3 -m coverage report)
          echo "$coverage"
          regex="TOTAL.+[ ]([0-9]?[0-9]?[0-9])%"
          if  [[ $coverage =~ $regex ]]
          then
            echo "##[set-output name=total_coverage;]${BASH_REMATCH[1]}%"
          fi
      - name: Generate Coverage Badge
        uses: RubbaBoy/BYOB@v1.3.0
        with:
          NAME: coverage_report
          LABEL: 'Total Coverage'
          STATUS: ${{ steps.CoverageReport.outputs.total_coverage }}
          COLOR: 00EEFF
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
