name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Activate Virtual Environment
      run: | 
        python -m venv venv
        source venv/bin/activate
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with Flake8
      run: | 
        # Stop build if we have syntax errors or undefined names
        flake8 src/media_analyzer --count --select=E9,F63,F7,F82 --show-source --statistics
        # All errors treated as warnings. 
        flake8 src/media_analyzer --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run Tests with Coverage
      env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          PYTHONPATH: ${{ env.PYTHONPATH }}:${{env.GITHUB_WORKSPACE}}/src:${{env.GITHUBWORKSPACE}}/train
      run: |
        echo $PYTHONPATH
        cd src/media_analyzer
        coverage run --source="." manage.py test
        coverage report

